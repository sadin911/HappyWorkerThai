{"version":3,"sources":["screens/Home.js","screens/Detail.js","components/NavigationBar.js","App.js","serviceWorker.js","index.js"],"names":["images","properties","duration","transitionDuration","infinite","indicators","arrows","pauseOnHover","onChange","oldIndex","newIndex","console","log","Home","map","each","index","style","backgroundImage","width","height","top","position","color","textAlign","Row","Col","fontSize","fontWeight","marginBottom","Form","md","paddingLeft","paddingRight","Group","controlId","Control","placeholder","Button","variant","type","size","block","Component","Detail","Styles","styled","div","NavigationBar","backgroundColor","zIndex","left","display","padding","right","Dropdown","Toggle","id","countryCode","svg","className","Menu","Item","href","Navbar","expand","Brand","to","Image","src","rounded","aria-controls","Collapse","Nav","Link","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"kUAeIA,EAAS,CACX,qBAMIC,EAAa,CACjBC,SAAU,IACVC,mBAAoB,IACpBC,UAAU,EACVC,YAAY,EACZC,QAAQ,EACRC,cAAc,EACdC,SAAU,SAACC,EAAUC,GACnBC,QAAQC,IAAR,gCAAqCH,EAArC,eAAoDC,MAInCG,E,uKAEjB,OACE,6BACE,kBAAC,OAASZ,EACPD,EAAOc,KAAI,SAACC,EAAMC,GAAP,OACV,yBACEC,MAAO,CACLC,gBAAgB,OAAD,OAASH,EAAT,KACfI,MAAO,OACPC,OAAQ,MAGV,yBACEH,MAAO,CACLI,IAAK,IACLC,SAAU,WACVC,MAAO,qBACPC,UAAW,SACXL,MAAO,SAGT,kBAACM,EAAA,EAAD,CAAKR,MAAO,IACV,kBAACS,EAAA,EAAD,CAAKT,MAAO,CAAEU,SAAU,GAAIC,WAAY,SAAxC,gCAIF,kBAACH,EAAA,EAAD,CAAKR,MAAO,CAACY,aAAa,KACxB,kBAACH,EAAA,EAAD,CAAKT,MAAO,CAAEU,SAAU,KAAxB,kDAKF,kBAACG,EAAA,EAAD,KACE,kBAACL,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,MACA,kBAACA,EAAA,EAAD,CAAKK,IAAE,EAACd,MAAO,CAACe,YAAY,EAAEC,aAAa,IACzC,kBAACH,EAAA,EAAKI,MAAN,CAAYC,UAAU,qBACpB,kBAACL,EAAA,EAAKM,QAAN,CAAcC,YAAY,cAG9B,kBAACX,EAAA,EAAD,CAAKK,IAAE,EAACd,MAAO,CAACe,YAAY,EAAEC,aAAa,IACzC,kBAACH,EAAA,EAAKI,MAAN,CAAYC,UAAU,qBACpB,kBAACL,EAAA,EAAKM,QAAN,CAAcC,YAAY,mBAG9B,kBAACX,EAAA,EAAD,CAAKK,IAAE,EAACd,MAAO,CAACe,YAAY,EAAEC,aAAa,IACzC,kBAACH,EAAA,EAAKI,MAAN,CAAYC,UAAU,qBACpB,kBAACL,EAAA,EAAKM,QAAN,CAAcC,YAAY,mBAG9B,kBAACX,EAAA,EAAD,CAAKK,IAAE,EAACd,MAAO,CAACe,YAAY,EAAEC,aAAa,IACzC,kBAACK,EAAA,EAAD,CAAQC,QAAQ,UAAUC,KAAK,SAASC,KAAK,KAAKC,OAAK,GAAvD,WAIF,kBAAChB,EAAA,EAAD,mB,GAxDciB,aChCbC,E,uKAEjB,OAAO,2C,GAFyBD,a,k+BCepC,IAAME,EAASC,IAAOC,IAAV,KAsCSC,E,uKAEjB,OACE,kBAACH,EAAD,KACE,yBACE5B,MAAO,CACLgC,gBAAiB,sBACjB3B,SAAU,WACVD,IAAK,EACLF,MAAO,OACP+B,OAAQ,QAGV,yBACEjC,MAAO,CACLgC,gBAAiB,kBACjB9B,MAAO,SAGT,kBAACM,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKT,MAAO,CAAEkC,KAAM,GAAI5B,MAAO,SAC7B,yBACEN,MAAO,CACLgC,gBAAiB,iBACjBG,QAAS,cACTC,QAAS,KAJb,+GAUF,kBAAC3B,EAAA,EAAD,CAAKT,MAAO,CAAEO,UAAW,QAAS8B,MAAO,KACvC,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAASC,OAAV,CAAiBjB,QAAQ,OAAOkB,GAAG,kBACjC,kBAAC,IAAD,CAAkBC,YAAY,KAAKC,KAAG,IACtC,0BAAMC,UAAU,yBAAhB,uBAGF,kBAACL,EAAA,EAASM,KAAV,KACE,kBAACN,EAAA,EAASO,KAAV,CAAeC,KAAK,cAClB,kBAAC,IAAD,CAAkBL,YAAY,KAAKC,KAAG,IACtC,0BAAMC,UAAU,gBAAhB,uBAEF,kBAACL,EAAA,EAASO,KAAV,CAAeC,KAAK,cAClB,kBAAC,IAAD,CAAkBL,YAAY,KAAKC,KAAG,IACtC,0BAAMC,UAAU,gBAAhB,YAEF,kBAACL,EAAA,EAASO,KAAV,CAAeC,KAAK,cAClB,kBAAC,IAAD,CAAkBL,YAAY,KAAKC,KAAG,IACtC,0BAAMC,UAAU,gBAAhB,uBAEF,kBAACL,EAAA,EAASO,KAAV,CAAeC,KAAK,cAClB,kBAAC,IAAD,CAAkBL,YAAY,KAAKC,KAAG,IACtC,0BAAMC,UAAU,gBAAhB,iEAEF,kBAACL,EAAA,EAASO,KAAV,CAAeC,KAAK,cAClB,kBAAC,IAAD,CAAkBL,YAAY,KAAKC,KAAG,IACtC,0BAAMC,UAAU,gBAAhB,gEAQZ,kBAACI,EAAA,EAAD,CAAQC,OAAO,MACb,kBAACD,EAAA,EAAOE,MAAR,KACE,kBAAC,IAAD,CAAMC,GAAG,SACP,kBAACC,EAAA,EAAD,CAAOC,IAAI,oBAAoBC,SAAO,MAG1C,kBAACN,EAAA,EAAOR,OAAR,CAAee,gBAAc,qBAE7B,kBAACP,EAAA,EAAOQ,SAAR,CACEf,GAAG,mBACHG,UAAU,uBAEV,kBAACa,EAAA,EAAD,KACE,kBAACA,EAAA,EAAIC,KAAL,KACE,kBAAC,IAAD,CAAMP,GAAG,QAAQP,UAAU,YAA3B,SAIF,kBAACa,EAAA,EAAIC,KAAL,KACE,kBAAC,IAAD,CAAMP,GAAG,WAAWP,UAAU,YAA9B,cAIF,kBAACa,EAAA,EAAIC,KAAL,KACE,kBAAC,IAAD,CAAMP,GAAG,UAAUP,UAAU,YAA7B,oB,GAzFyBjB,aCd5BgC,MAlCf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,6BAcE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,SACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,WACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,KACV,kBAAC,EAAD,WCrBQC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLnF,QAAQmF,MAAMA,EAAMC,c","file":"static/js/main.f985dc30.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  NavDropdown,\r\n  Form,\r\n  FormControl,\r\n  Button,\r\n  Image,\r\n  Row,\r\n  Col,\r\n  DropdownButton,\r\n  Dropdown,\r\n} from \"react-bootstrap\";\r\nimport { Fade, Zoom } from \"react-slideshow-image\";\r\nvar images = [\r\n  \"../images/bg1.jpg\",\r\n  //   \"../images/bg2.jpg\",\r\n  //   \"../images/bg3.jpg\",\r\n  //   \"../images/bg4.jpg\",\r\n];\r\n\r\nconst properties = {\r\n  duration: 1000000,\r\n  transitionDuration: 500,\r\n  infinite: true,\r\n  indicators: false,\r\n  arrows: false,\r\n  pauseOnHover: true,\r\n  onChange: (oldIndex, newIndex) => {\r\n    console.log(`slide transition from ${oldIndex} to ${newIndex}`);\r\n  },\r\n};\r\n\r\nexport default class Home extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Fade {...properties}>\r\n          {images.map((each, index) => (\r\n            <div\r\n              style={{\r\n                backgroundImage: `url(${each})`,\r\n                width: \"100%\",\r\n                height: 700,\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  top: 300,\r\n                  position: \"absolute\",\r\n                  color: \"rgb(255, 255, 255)\",\r\n                  textAlign: \"center\",\r\n                  width: \"100%\",\r\n                }}\r\n              >\r\n                <Row style={{}}>\r\n                  <Col style={{ fontSize: 46, fontWeight: \"bold\" }}>\r\n                    Find your job in Japan now!\r\n                  </Col>\r\n                </Row>\r\n                <Row style={{marginBottom:15}}>\r\n                  <Col style={{ fontSize: 22 }}>\r\n                    Foreigner friendly jobs across all industries\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Form>\r\n                  <Row>\r\n                    <Col></Col>\r\n                    <Col md style={{paddingLeft:5,paddingRight:5}}>\r\n                      <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Control placeholder=\"Keyword\" />\r\n                      </Form.Group>\r\n                    </Col>\r\n                    <Col md style={{paddingLeft:5,paddingRight:5}}>\r\n                      <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Control placeholder=\"Job Category\" />\r\n                      </Form.Group>\r\n                    </Col>\r\n                    <Col md style={{paddingLeft:5,paddingRight:5}}>\r\n                      <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Control placeholder=\"Job Location\" />\r\n                      </Form.Group>\r\n                    </Col>\r\n                    <Col md style={{paddingLeft:5,paddingRight:5}}>\r\n                      <Button variant=\"primary\" type=\"submit\" size=\"md\" block>\r\n                        Search\r\n                      </Button>\r\n                    </Col>\r\n                    <Col></Col>\r\n                  </Row>\r\n                </Form>\r\n              </div>\r\n            </div>\r\n\r\n            // <img\r\n            //   key={index}\r\n            //   style={{ width: \"100%\", height: 700 }}\r\n            //   src={each}\r\n            // />\r\n          ))}\r\n        </Fade>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Detail extends Component {\r\n  render() {\r\n    return <div>Detail</div>;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  NavDropdown,\r\n  Form,\r\n  FormControl,\r\n  Button,\r\n  Image,\r\n  Row,\r\n  Col,\r\n  Dropdown,\r\n} from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport ReactCountryFlag from \"react-country-flag\";\r\n\r\nconst Styles = styled.div`\r\n  .text-nav {\r\n    textdecoration: none;\r\n    color: #fff;\r\n    font-size: 1rem;\r\n    font-weight: bold;\r\n  }\r\n\r\n  .navbar-toggler {\r\n    border: 1px solid white;\r\n  }\r\n\r\n  .text-country-selected {\r\n    color: #fff;\r\n    font-size: 1rem;\r\n    font-weight: bold;\r\n    padding-left: 10px;\r\n    padding-right: 5px;\r\n  }\r\n\r\n  .text-country {\r\n    font-size: 1rem;\r\n    font-weight: bold;\r\n    padding-left: 10px;\r\n    padding-right: 5px;\r\n  }\r\n\r\n  .dropdown-toggle {\r\n    border: none;\r\n    outline: none;\r\n    text-decoration: none;\r\n  }\r\n\r\n  .navbar-light .navbar-toggler-icon {\r\n    background-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='30' height='30' viewBox='0 0 30 30'%3e%3cpath stroke='rgba(255, 255, 255, 1)' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e\");\r\n  }\r\n`;\r\n\r\nexport default class NavigationBar extends Component {\r\n  render() {\r\n    return (\r\n      <Styles>\r\n        <div\r\n          style={{\r\n            backgroundColor: \"rgba(255,255,255,0)\",\r\n            position: \"absolute\",\r\n            top: 0,\r\n            width: \"100%\",\r\n            zIndex: 99999,\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              backgroundColor: \"rgba(0,0,0,0.2)\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            <Row>\r\n              <Col style={{ left: 20, color: \"#fff\" }}>\r\n                <div\r\n                  style={{\r\n                    backgroundColor: \"rgba(0,0,0,.2)\",\r\n                    display: \"inline-flex\",\r\n                    padding: 10,\r\n                  }}\r\n                >\r\n                  Employers/จัดหาคนเข้าทำงาน\r\n                </div>\r\n              </Col>\r\n              <Col style={{ textAlign: \"right\", right: 20 }}>\r\n                <Dropdown>\r\n                  <Dropdown.Toggle variant=\"link\" id=\"dropdown-basic\">\r\n                    <ReactCountryFlag countryCode=\"TH\" svg />\r\n                    <span className=\"text-country-selected\">ไทย</span>\r\n                  </Dropdown.Toggle>\r\n\r\n                  <Dropdown.Menu>\r\n                    <Dropdown.Item href=\"#/action-1\">\r\n                      <ReactCountryFlag countryCode=\"TH\" svg />\r\n                      <span className=\"text-country\">ไทย</span>\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item href=\"#/action-2\">\r\n                      <ReactCountryFlag countryCode=\"US\" svg />\r\n                      <span className=\"text-country\">English</span>\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item href=\"#/action-3\">\r\n                      <ReactCountryFlag countryCode=\"LA\" svg />\r\n                      <span className=\"text-country\">ລາວ</span>\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item href=\"#/action-4\">\r\n                      <ReactCountryFlag countryCode=\"MY\" svg />\r\n                      <span className=\"text-country\">မြန်မာဘာသာ</span>\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item href=\"#/action-5\">\r\n                      <ReactCountryFlag countryCode=\"KH\" svg />\r\n                      <span className=\"text-country\">ភាសាខ្មែរ</span>\r\n                    </Dropdown.Item>\r\n                  </Dropdown.Menu>\r\n                </Dropdown>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n\r\n          <Navbar expand=\"lg\">\r\n            <Navbar.Brand>\r\n              <Link to=\"/home\">\r\n                <Image src=\"./images/logo.png\" rounded />\r\n              </Link>\r\n            </Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n\r\n            <Navbar.Collapse\r\n              id=\"basic-navbar-nav\"\r\n              className=\"justify-content-end\"\r\n            >\r\n              <Nav>\r\n                <Nav.Link>\r\n                  <Link to=\"/home\" className=\"text-nav\">\r\n                    JOBS\r\n                  </Link>\r\n                </Nav.Link>\r\n                <Nav.Link>\r\n                  <Link to=\"/company\" className=\"text-nav\">\r\n                    COMPANIES\r\n                  </Link>\r\n                </Nav.Link>\r\n                <Nav.Link>\r\n                  <Link to=\"/detail\" className=\"text-nav\">\r\n                    DETAIL\r\n                  </Link>\r\n                </Nav.Link>\r\n                {/* <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n                  <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                  <NavDropdown.Item href=\"#action/3.2\">\r\n                    Another action\r\n                  </NavDropdown.Item>\r\n                  <NavDropdown.Item href=\"#action/3.3\">\r\n                    Something\r\n                  </NavDropdown.Item>\r\n                  <NavDropdown.Divider />\r\n                  <NavDropdown.Item href=\"#action/3.4\">\r\n                    Separated link\r\n                  </NavDropdown.Item>\r\n                </NavDropdown> */}\r\n              </Nav>\r\n            </Navbar.Collapse>\r\n          </Navbar>\r\n        </div>\r\n      </Styles>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { HashRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Home from \"./screens/Home\";\nimport Detail from \"./screens/Detail\";\nimport NavigationBar from \"./components/NavigationBar\";\n\nfunction App() {\n  return (\n    <Router>\n      <NavigationBar />\n      <div>\n        {/* <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">/</Link>\n            </li>\n            <li>\n              <Link to=\"/home\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/detail\">detail</Link>\n            </li>\n          </ul>\n        </nav> */}\n        <Switch>\n          <Route path=\"/home\">\n            <Home />\n          </Route>\n          <Route path=\"/detail\">\n            <Detail />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}